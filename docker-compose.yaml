# docker-compose.yml

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APACHE_CONF: ${APACHE_CONF} # This will be passed from .env.dev or .env.prod
        APP_ENV: ${APP_ENV} # Pass APP_ENV as a build arg as well for conditional installs
    container_name: videgrenier-web-${APP_ENV}
    ports:
      - "${APP_PORT}:80"
    volumes:
      # For dev, mount code to see live changes. For prod, code is copied in image.
      - ${CODE_VOLUME_PATH}:/var/www/html
    depends_on:
      - db
    env_file:
      - ${ENV_FILE}
    profiles:
      - dev
      - prod

  db:
    image: mysql:8.4
    container_name: videgrenier-db-${APP_ENV}
    restart: always
    env_file:
      - ${ENV_FILE}
    ports:
      - "${DB_PORT}"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data_${APP_ENV}:/var/lib/mysql
      - ./mysql_conf/my.cnf:/etc/mysql/conf.d/my.cnf
      # Init script for dev and prod DBs
      - ./sql/import.sql:/docker-entrypoint-initdb.d/import.sql
    profiles:
      - dev
      - prod

volumes:
  db_data_dev:
  db_data_prod: